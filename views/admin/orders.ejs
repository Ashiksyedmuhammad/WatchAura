<%- include('../admin-layouts/header.ejs') %>

    <body>
        <div class="container-scroller">
            <!-- partial:partials/_sidebar.html -->
            <nav class="sidebar sidebar-offcanvas" id="sidebar">
                <div class="sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top">
                    <a class="sidebar-brand brand-logo" href="index.html"><img
                            src="/admin-assets/assets/images/logo.svg" alt="logo" /></a>
                    <a class="sidebar-brand brand-logo-mini" href="index.html"><img
                            src="/admin-assets/assets/images/logo-mini.svg" alt="logo" /></a>
                </div>
                <%- include('../admin-layouts/sideBar.ejs') %>
            </nav>

            <!-- Navbar -->
            <div class="col-12">
                <nav class="navbar p-0 fixed-top d-flex flex-row">
                    <div class="navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center">
                        <a class="navbar-brand brand-logo-mini" href="index.html"><img
                                src="/admin-assets/assets/images/logo-mini.svg" alt="logo" /></a>
                    </div>
                    <div class="navbar-menu-wrapper flex-grow d-flex align-items-stretch">
                        <button class="navbar-toggler navbar-toggler align-self-center" type="button"
                            data-toggle="minimize">
                            <span class="mdi mdi-menu"></span>
                        </button>
                        <ul class="navbar-nav navbar-nav-right">
                            <li class="nav-item dropdown">
                                <a class="nav-link" id="profileDropdown" href="#" data-toggle="dropdown">
                                    <div class="navbar-profile">
                                        <img class="img-xs rounded-circle"
                                            src="/admin-assets/assets/images/faces/face15.jpg" alt="">
                                        <p class="mb-0 d-none d-sm-block navbar-profile-name">ADMIN</p>
                                        <i class="mdi mdi-menu-down d-none d-sm-block"></i>
                                    </div>
                                </a>
                                <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list"
                                    aria-labelledby="profileDropdown">
                                    <h6 class="p-3 mb-0">Profile</h6>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item preview-item">
                                        <form action="/admin/logout" method="post">
                                            <div class="preview-thumbnail">
                                                <div class="preview-icon bg-dark rounded-circle">
                                                    <button type="submit"><i
                                                            class="mdi mdi-logout text-danger"></i></button>
                                                </div>
                                            </div>
                                        </form>
                                    </a>
                                </div>
                            </li>
                        </ul>
                        <button class="navbar-toggler navbar-toggler-right d-lg-none align-self-center" type="button"
                            data-toggle="offcanvas">
                            <span class="mdi mdi-format-line-spacing"></span>
                        </button>
                    </div>
                </nav>

                <!-- Table -->
                <div class="col-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Orders</h4>
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>ORDER ID</th>
                                            <th>PURCHASE DATE</th>
                                            <th>ITEMS</th>
                                            <th>AMOUNT</th>
                                            <th>SHIP TO</th>
                                            <th>USER NAME</th>
                                            <!-- <th>PAYMENT TYPE</th> -->
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (orders.length > 0) { %>
                                            <% orders.forEach((order) => { %>
                                                <tr>
                                                    <td>
                                                        <a href="#" class="view-order" data-bs-toggle="modal" data-bs-target="#orderModal-<%= order._id %>">
                                                            #<%= order.orderId %>
                                                        </a>
                                                    </td>
                                                    <td><%= new Date(order.createdAt).toLocaleDateString("en-US", {year: "numeric", month: "long", day: "numeric"}) %></td>
                                                    <td><%= order.items.length %></td>
                                                    <td><%= order.totalAmount %></td>
                                                    <td><%= order.shippingAddress.firstName %></td>
                                                    <td><%= order.userId.firstName %></td>
                                                    <td><%= order.paymentMethod.payType %></td>
                                                </tr>
                                            <% }); %>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="7" class="text-center">No orders found.</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <% orders.forEach((order) => { %>
            <div class="modal fade" id="orderModal-<%= order._id %>" tabindex="-1" aria-labelledby="orderModalLabel-<%= order._id %>" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="orderModalLabel-<%= order._id %>">Order Details: #<%= order.orderId %></h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <h6>Order Information</h6>
                                    <p><strong>Order ID:</strong> <%= order.orderId %></p>
                                    <p><strong>Order Date:</strong> <%= order.createdAt.toLocaleDateString() %></p>
                                    <p><strong>Total Amount:</strong> â‚¹<%= order.totalAmount %></p>
                                    <p><strong>Payment Type:</strong> <%= order.paymentMethod.payType %></p>
                                    <p><strong>Payment Status:</strong> <%= order.paymentStatus %></p>
                                </div>
                                <div class="col-md-6">
                                    <h6>Shipping Address</h6>
                                    <% if (order.shippingAddress) { %>
                                        <p><%= order.shippingAddress.firstName %></p>
                                        <p><%= order.shippingAddress.address %></p>
                                        <p>
                                            <%= order.shippingAddress.city %>, 
                                            <%= order.shippingAddress.state %>
                                            <%= order.shippingAddress.postal_code %>
                                        </p>
                                        <p><%= order.shippingAddress.phone %></p>
                                    <% } else { %>
                                        <p>No shipping address available</p>
                                    <% } %>
                                </div>
                            </div>
                            <div class="row mt-4">
                                <div class="col-12">
                                    <h6>Order Items</h6>
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th>Product</th>
                                                <th>Quantity</th>
                                                <th>Total</th>
                                                <th>Status</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% order.items.forEach(product => { %>
                                                <tr>
                                                    <td><%= product.productId.productName %></td>
                                                    <td><%= product.quantity %></td>
                                                    <td>â‚¹<%= product.price %></td> 
                                                    <td><%= product.status %></td>
                                                    <td>
                                                        <% if (product.status !== 'Cancelled' && product.status !== 'Delivered' && product.status !== 'Return Requested') { %>
                                                            <a href="/admin/updateStatus?itemid=<%= product._id %>&orderid=<%= order._id %>" class="btn btn-primary btn-sm">EDIT</a>
                                                            <button class="btn btn-danger btn-sm cancel-order" 
                                                                    data-order-id="<%= order._id %>" 
                                                                    data-item-id="<%= product._id %>">
                                                                CANCEL
                                                            </button>
                                                        <% } else if(product.status == 'Return Requested') {%>
                                                            
                                                            <button class="btn btn-success btn-sm approve-order" 
                                                        data-order-id="<%= order._id %>" 
                                                        data-item-id="<%= product._id %>">
                                                    APPROVE 
                                                </button>&nbsp;<button class="btn btn-danger btn-sm reject-order" 
                                                data-order-id="<%= order._id %>" 
                                                data-item-id="<%= product._id %>">
                                            REJECT
                                        </button><%}%>
                                                
                                                    </td>
                                                </tr>
                                            <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        <% }) %>
    </body>

    <!-- container-scroller -->
    <!-- plugins:js -->
    <script src="/admin-assets/assets/vendors/js/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page -->
    <script src="/admin-assets/assets/vendors/chart.js/Chart.min.js"></script>
    <script src="/admin-assets/assets/vendors/progressbar.js/progressbar.min.js"></script>
    <script src="/admin-assets/assets/vendors/jvectormap/jquery-jvectormap.min.js"></script>
    <script src="/admin-assets/assets/vendors/jvectormap/jquery-jvectormap-world-mill-en.js"></script>
    <script src="/admin-assets/assets/vendors/owl-carousel-2/owl.carousel.min.js"></script>
    <!-- End plugin js for this page -->
    <!-- inject:js -->
    <script src="/admin-assets/assets/js/off-canvas.js"></script>
    <script src="/admin-assets/assets/js/hoverable-collapse.js"></script>
    <script src="/admin-assets/assets/js/misc.js"></script>
    <script src="/admin-assets/assets/js/settings.js"></script>
    <script src="/admin-assets/assets/js/todolist.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page -->
    <script src="/admin-assets/assets/js/dashboard.js"></script>
   
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
    
    var modals = document.querySelectorAll('.modal');
    modals.forEach(function(modal) {
        new bootstrap.Modal(modal);
    });

    
    var cancelButtons = document.querySelectorAll('.cancel-order');
    cancelButtons.forEach(function(button) {
        button.addEventListener('click', function(event) {
            event.preventDefault(); 
            var orderId = this.getAttribute('data-order-id');
            var itemId = this.getAttribute('data-item-id');
            cancelOrder(orderId, itemId);
        });
    });

    var approveButtons = document.querySelectorAll('.approve-order');
    approveButtons.forEach(function(button) {
        button.addEventListener('click', function(event) {
            event.preventDefault(); 
            var orderId = this.getAttribute('data-order-id');
            var itemId = this.getAttribute('data-item-id');
            approveOrder(orderId, itemId);
        });
    });

    var rejectButtons = document.querySelectorAll('.reject-order');
    rejectButtons.forEach(function(button) {
        button.addEventListener('click', function(event) {
            event.preventDefault(); 
            var orderId = this.getAttribute('data-order-id');
            var itemId = this.getAttribute('data-item-id');
            rejectOrder(orderId, itemId);
        });
    });
   
    var viewOrderLinks = document.querySelectorAll('.view-order');
    viewOrderLinks.forEach(function(link) {
        link.addEventListener('click', function(event) {
            event.preventDefault(); 
            var targetModal = this.getAttribute('data-bs-target');
            var modal = new bootstrap.Modal(document.querySelector(targetModal));
            modal.show();
        });
    });
});

    </script>
    <script>
        
    document.addEventListener('DOMContentLoaded', function() {
    
    const cancelButtons = document.querySelectorAll('.cancel-order');
    
    
    cancelButtons.forEach(button => {
        button.addEventListener('click', function(event) {
           
            event.preventDefault();
            
          
            const orderId = this.getAttribute('data-order-id');
            const itemId = this.getAttribute('data-item-id');
            
           
            setTimeout(() => {
                cancelOrder(orderId, itemId);
            }, 300);
        });
    });

    const approveButtons = document.querySelectorAll('.approve-order');
    
    
    approveButtons.forEach(button => {
        button.addEventListener('click', function(event) {
           
            event.preventDefault();
            
          
            const orderId = this.getAttribute('data-order-id');
            const itemId = this.getAttribute('data-item-id');
            
           
            setTimeout(() => {
                approveOrder(orderId, itemId);
            }, 300);
        });
    });

    const rejectButtons = document.querySelectorAll('.reject-order');
    
    
    rejectButtons.forEach(button => {
        button.addEventListener('click', function(event) {
           
            event.preventDefault();
            
          
            const orderId = this.getAttribute('data-order-id');
            const itemId = this.getAttribute('data-item-id');
            
           
            setTimeout(() => {
                rejectOrder(orderId, itemId);
            }, 300);
        });
    });
});

async function cancelOrder(orderId, itemId) {
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Cancel it!'
    });

    if (result.isConfirmed) {
        try {
            const response = await fetch('/admin/cancelOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ _id: orderId, itemId: itemId })
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire(
                    'Cancelled!',
                    'Order has been canceled and stock has been updated.',
                    'success'
                ).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire(
                    'Error!',
                    data.message,
                    'error'
                );
            }
        } catch (error) {
            console.error('Error during order cancellation:', error);
            Swal.fire(
                'Error!',
                'An error occurred while cancelling the order.',
                'error'
            );
        }
    }
}

async function approveOrder(orderId, itemId) {
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Cancel it!'
    });

    if (result.isConfirmed) {
        try {
            const response = await fetch('/admin/approveOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ _id: orderId, itemId: itemId })
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire(
                    'Approved!',
                    'Request has been Approved ...',
                    'success'
                ).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire(
                    'Error!',
                    data.message,
                    'error'
                );
            }
        } catch (error) {
            console.error('Error during order Approving:', error);
            Swal.fire(
                'Error!',
                'An error occurred while approving the order.',
                'error'
            );
        }
    }
}


async function rejectOrder(orderId, itemId) {
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Cancel it!'
    });

    if (result.isConfirmed) {
        try {
            const response = await fetch('/admin/rejectOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ _id: orderId, itemId: itemId })
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire(
                    'Rejected',
                    'Request has been Rejected ...',
                    'success'
                ).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire(
                    'Error!',
                    data.message,
                    'error'
                );
            }
        } catch (error) {
            console.error('Error during order Rejection..', error);
            Swal.fire(
                'Error!',
                'An error occurred while Rejection the order.',
                'error'
            );
        }
    }
}
    </script>
    </body>

    <%- include('../admin-layouts/footer.ejs') %>